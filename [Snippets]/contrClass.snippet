<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>contrClass</Title>
      <Shortcut>contrClass</Shortcut>
      <Description>Code snippet to create an controller</Description>
      <Author>Matheus Chielle</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>Entity</ID>
          <ToolTip>Entity name</ToolTip>
          <Default>Entity</Default>
          <Function>
          </Function>
        </Literal>
		<Literal Editable="true">
			<ID>Project</ID>
			<ToolTip>Project name</ToolTip>
			<Default>Project</Default>
			<Function>
			</Function>
		</Literal>
      </Declarations>
      <Code Language="csharp">
        <![CDATA[using $Project$.Api.v1.Controllers.Base;
using $Project$.Domain.Interfaces.Services;
using $Project$.Domain.Models.v1;
using $Project$.Domain.Responses;
using $Project$.Domain.Responses.Interfaces;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Threading.Tasks;

namespace $Project$.Api.Controllers.v1
{
    public class $Entity$Controller : EntityController<$Entity$AddModel, $Entity$UpdateModel, $Entity$GetModel, $Entity$Model, Guid>
    {
        public $Entity$Controller(I$Entity$Service service)
            : base(service)
        {
        }
		
        public async override Task<IResponseBase> Get(int? page, int? pageSize)
        {
            return await Task.Run(() => { return new UnauthorizedResponse(); });
        }

        public async override Task<IResponseBase> Get(Guid id)
        {
            return await Task.Run(() => { return new UnauthorizedResponse(); });
        }

        public async override Task<IResponseBase> Post([FromBody] UserAddModel model)
        {
            return await Task.Run(() => { return new UnauthorizedResponse(); });
        }

        public async override Task<IResponseBase> Put(Guid id, [FromBody] UserUpdateModel model)
        {
            return await Task.Run(() => { return new UnauthorizedResponse(); });
        }

        public async override Task<IResponseBase> Patch(Guid id, [FromBody] UserUpdateModel model)
        {
            return await Task.Run(() => { return new UnauthorizedResponse(); });
        }

        public override IResponseBase Delete(Guid id)
        {
            return new UnauthorizedResponse();
        }
    }
}$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>