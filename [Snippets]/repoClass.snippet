<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>repoClass</Title>
			<Shortcut>repoClass</Shortcut>
			<Description>Code snippet to create an implementation of an entity' repository</Description>
			<Author>Matheus Chielle</Author>
		</Header>
		<Snippet>
			<Declarations>
				<Literal Editable="true">
					<ID>Entity</ID>
					<ToolTip>Entity name</ToolTip>
					<Default>Entity</Default>
					<Function>
					</Function>
				</Literal>
				<Literal Editable="true">
					<ID>Context</ID>
					<ToolTip>Name of the context</ToolTip>
					<Default>Context</Default>
					<Function>
					</Function>
				</Literal>
				<Literal Editable="true">
					<ID>Key</ID>
					<ToolTip>Entity key type</ToolTip>
					<Default>Key</Default>
					<Function>
					</Function>
				</Literal>
				<Literal Editable="true">
					<ID>Project</ID>
					<ToolTip>Project name</ToolTip>
					<Default>Project</Default>
					<Function>
					</Function>
				</Literal>
			</Declarations>
			<Code Language="csharp">
				<![CDATA[using $Project$.Domain.Entities;
using $Project$.Domain.Interfaces.Repositories;
using $Project$.Infra.Data.Context;
using $Project$.Infra.Data.Context.RepositoryContext;
using $Project$.Infra.Data.Repositories.Core;
using System;

namespace $Project$.Infra.Data.Repositories
{
    public class $Entity$Repository : RepositoryBase<$Context$Context, $Entity$, $Key$>, I$Entity$Repository
    {
        public $Entity$Repository($Context$Context context, IRepositoryContext repositoryContext)
            : base(context, repositoryContext)
        {
        }
		
		public override async Task<$Entity$> GetCompleteByIdAsync(Guid id, CancellationToken cancellationToken = default)
        {
            return await GetByIdAsync(id, cancellationToken);
        }
    }
}$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>