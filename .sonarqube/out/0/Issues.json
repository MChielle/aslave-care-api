{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.14.0.0",
        "fileVersion": "4.14.0-3.25359.3 (6dbcfd2f)",
        "semanticVersion": "4.14.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8632",
          "level": "warning",
          "message": "The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Models/v1/Role/RolePatchModel.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 42,
                  "endLine": 13,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Entities/Core/IEntity.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 9,
                  "endLine": 7,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Constants/ConstantsGeneral.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Enums/CountryType.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 13,
                  "endLine": 3,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Enums/EnvironmentType.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 13,
                  "endLine": 3,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Enums/FileType.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 13,
                  "endLine": 1,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'FileType' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Enums/FileType.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 13,
                  "endLine": 1,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'CountryType' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Enums/CountryType.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 13,
                  "endLine": 3,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'EnvironmentType' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Enums/EnvironmentType.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 13,
                  "endLine": 3,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'JWTHelper' to match pascal case naming rules, consider using 'JwtHelper'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Helpers/JwtHelper.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 25,
                  "endLine": 7,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Interfaces/Services/v1/IRegisterInStockService.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'IRegisterInStockService' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Interfaces/Services/v1/IRegisterInStockService.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 18,
                  "endLine": 8,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2326",
          "level": "warning",
          "message": "'TStrongEntityMtMModel' is not used in the interface.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Interfaces/Services/Core/IMtMServiceBase.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 9,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2326",
          "level": "warning",
          "message": "'TWeakEntityMtMModel' is not used in the interface.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Interfaces/Services/Core/IMtMServiceBase.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 61,
                  "endLine": 9,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IMtMRepositoryBase' interface to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Interfaces/Repositories/Core/IMtMRepositoryBase.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 22,
                  "endLine": 8,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IMtMServiceBase' interface to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Interfaces/Services/Core/IMtMServiceBase.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 22,
                  "endLine": 9,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private method 'DecryptString'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Helpers/RSACipherHelper.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 31,
                  "endLine": 42,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2326",
          "level": "warning",
          "message": "'TGetModel' is not used in the interface.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Interfaces/Services/Core/IServiceBase.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 73,
                  "endLine": 9,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'AddOrUpdateAsync' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Interfaces/Services/Core/IServiceBase.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 29,
                  "endLine": 16,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Interfaces/Services/Core/IServiceBase.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 29,
                  "endLine": 22,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "S2436",
          "level": "warning",
          "message": "Reduce the number of generic parameters in the 'IServiceBase' interface to no more than the 2 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Interfaces/Services/Core/IServiceBase.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 22,
                  "endLine": 9,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'RSACipherHelper' to match pascal case naming rules, consider using 'RsaCipherHelper'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Helpers/RSACipherHelper.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 25,
                  "endLine": 13,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1694",
          "level": "warning",
          "message": "Convert this 'abstract' class to an interface.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Entities/Core/EntityMtM.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1764",
          "level": "warning",
          "message": "Correct one of the identical expressions on both sides of operator '&&'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Entities/RegisterOutStock.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 58,
                  "endLine": 23,
                  "endColumn": 92
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Entities/RegisterOutStock.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 20,
                  "endLine": 23,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null
            }
          }
        },
        {
          "ruleId": "S1764",
          "level": "warning",
          "message": "Correct one of the identical expressions on both sides of operator '&&'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Entities/RegisterInStock.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 57,
                  "endLine": 26,
                  "endColumn": 90
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Entities/RegisterInStock.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 20,
                  "endLine": 26,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null
            }
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.ApplicationException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Helpers/JwtHelper.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 23,
                  "endLine": 14,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6588",
          "level": "warning",
          "message": "Use \"DateTime.UnixEpoch\" instead of creating DateTime instances that point to the unix epoch time",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Helpers/TimeZoneHelper.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 42,
                  "endLine": 22,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.ApplicationException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Configurations/SigningConfigurations.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 23,
                  "endLine": 30,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1850",
          "level": "note",
          "message": "Prefer static 'System.Security.Cryptography.SHA256.HashData' method over 'ComputeHash'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Extensions/StringExtensions.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 44,
                  "endLine": 25,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ComputeTypePropertyKey": "ComputeHash",
              "TargetHashTypeDiagnosticPropertyKey": "SHA256"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Configurations/SigningConfigurations.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 40,
                  "endLine": 26,
                  "endColumn": 135
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4426",
          "level": "warning",
          "message": "Use a key length of at least 2048 bits for RSA cipher algorithm.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Helpers/RSACipherHelper.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 30,
                  "endLine": 93,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4426",
          "level": "warning",
          "message": "Use a key length of at least 2048 bits for RSA cipher algorithm.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Helpers/RSACipherHelper.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 30,
                  "endLine": 79,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Extensions/StringExtensions.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 20,
                  "endLine": 56,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1845",
          "level": "note",
          "message": "Use span-based 'string.Concat' and 'AsSpan' instead of 'Substring'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Extensions/StringExtensions.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 22,
                  "endLine": 33,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S5542",
          "level": "warning",
          "message": "Use secure mode and padding scheme.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Helpers/RSACipherHelper.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 31,
                  "endLine": 83,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Extensions/StringExtensions.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 20,
                  "endLine": 56,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.ApplicationException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/src/pds/aslavecare/aslave-care-api/AslaveCare.Domain/Extensions/StringExtensions.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 38,
                  "endLine": 74,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1050": {
          "id": "CA1050",
          "shortDescription": "Declare types in namespaces",
          "fullDescription": "Types are declared in namespaces to prevent name collisions and as a way to organize related types in an object hierarchy.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1050",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1845": {
          "id": "CA1845",
          "shortDescription": "Use span-based 'string.Concat'",
          "fullDescription": "It is more efficient to use 'AsSpan' and 'string.Concat', instead of 'Substring' and a concatenation operator.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1845",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1850": {
          "id": "CA1850",
          "shortDescription": "Prefer static 'HashData' method over 'ComputeHash'",
          "fullDescription": "It is more efficient to use the static 'HashData' method over creating and managing a HashAlgorithm instance to call 'ComputeHash'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1850",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2254": {
          "id": "CA2254",
          "shortDescription": "Template should be a static expression",
          "fullDescription": "The logging message template should not vary between calls.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2254",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8632": {
          "id": "CS8632",
          "shortDescription": "The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8632)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Whenever there are portions of code that are duplicated and do not depend on the state of their container class, they can be centralized inside a \"utility class\". A utility class is a class that only has static members, hence it should not be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General or reserved exceptions should never be thrown",
          "fullDescription": "This rule raises an issue when a general or reserved exception is thrown.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "This rule raises an issue when a private/internal type or member is never referenced in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Commented-out code distracts the focus from the actual executed code. It creates a noise that increases maintenance code. And because it is never executed, it quickly becomes out of date and invalid.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1694": {
          "id": "S1694",
          "shortDescription": "An abstract class should have both abstract and concrete methods",
          "fullDescription": "A class with only abstract methods and no inheritable behavior should be converted to an interface.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1694",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1764": {
          "id": "S1764",
          "shortDescription": "Identical expressions should not be used on both sides of operators",
          "fullDescription": "Using the same value on both sides of certain operators is a code defect. In the case of logical operators, it is either a copy/paste error and, therefore, a bug, or it is simply duplicated code and should be simplified. For bitwise operators and most binary mathematical operators, having the same value on both sides of an operator yields predictable results and should be simplified as well to avoid further code defects.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1764",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2326": {
          "id": "S2326",
          "shortDescription": "Unused type parameters should be removed",
          "fullDescription": "Type parameters that aren’t used are dead code, which can only distract and possibly confuse developers during maintenance. Therefore, unused type parameters should be removed.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2326",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2436": {
          "id": "S2436",
          "shortDescription": "Types and methods should not have too many generic parameters",
          "fullDescription": "A method or class with too many type parameters has likely aggregated too many responsibilities and should be split.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2436",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3903": {
          "id": "S3903",
          "shortDescription": "Types should be defined in named namespaces",
          "fullDescription": "Types are declared in namespaces in order to prevent name collisions and as a way to organize them into the object hierarchy. Types that are defined outside any named namespace are in a global namespace that cannot be referenced in code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3903",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4426": {
          "id": "S4426",
          "shortDescription": "Cryptographic keys should be robust",
          "fullDescription": "This vulnerability exposes encrypted data to attacks whose goal is to recover the plaintext.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4426",
          "properties": {
            "category": "Critical Vulnerability",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S5542": {
          "id": "S5542",
          "shortDescription": "Encryption algorithms should be used with secure mode and padding scheme",
          "fullDescription": "This vulnerability exposes encrypted data to a number of attacks whose goal is to recover the plaintext.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-5542",
          "properties": {
            "category": "Critical Vulnerability",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6444": {
          "id": "S6444",
          "shortDescription": "Not specifying a timeout for regular expressions is security-sensitive",
          "fullDescription": "Not specifying a timeout for regular expressions can lead to a Denial-of-Service attack. Pass a timeout when using System.Text.RegularExpressions to process untrusted input because a malicious user might craft a value for which the evaluation lasts excessively long.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6444",
          "properties": {
            "category": "Major Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6588": {
          "id": "S6588",
          "shortDescription": "Use the \"UnixEpoch\" field instead of creating \"DateTime\" instances that point to the beginning of the Unix epoch",
          "fullDescription": "With .NET Core the UnixEpoch field was introduced to DateTime and DateTimeOffset types. Using this field clearly states that the intention is to use the beginning of the Unix epoch.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6588",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "SYSLIB1045": {
          "id": "SYSLIB1045",
          "shortDescription": "Convert to 'GeneratedRegexAttribute'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/syslib-diagnostics/syslib1045",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true
          }
        }
      }
    }
  ]
}