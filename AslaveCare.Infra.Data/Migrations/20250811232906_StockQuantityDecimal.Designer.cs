// <auto-generated />
using System;
using AslaveCare.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AslaveCare.Infra.Data.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20250811232906_StockQuantityDecimal")]
    partial class StockQuantityDecimal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AslaveCare.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71c45363-20e5-4f70-be43-3b46452cd7a0"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = new Guid("ef2c54d6-a131-4e5a-b757-e3ebdd67e9bc")
                        });
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.Manager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71c45363-20e5-4f70-be43-3b46452cd7a0"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = new Guid("ef2c54d6-a131-4e5a-b757-e3ebdd67e9be")
                        });
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.RegisterIn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Apply")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ApplyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Donation")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("RegistersIn");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.RegisterInStock", b =>
                {
                    b.Property<Guid>("RegisterInId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8, 3)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(8, 3)");

                    b.HasKey("RegisterInId", "StockId");

                    b.HasIndex("StockId");

                    b.ToTable("RegisterInStocks");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.RegisterOut", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Apply")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ApplyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("RegistersOut");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.RegisterOutStock", b =>
                {
                    b.Property<Guid>("RegisterOutId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(8, 3)");

                    b.HasKey("RegisterOutId", "StockId");

                    b.HasIndex("StockId");

                    b.ToTable("RegisterOutStocks");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e589a9e9-1ba9-46e8-8487-ec68b2f9ef76"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Master",
                            UserType = 0
                        },
                        new
                        {
                            Id = new Guid("574ac0d0-2e84-44d7-8949-a8169fa3bbff"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Manager",
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("a869d27c-b75d-424b-a2d6-c91e273d631b"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Employee",
                            UserType = 2
                        });
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("Disable")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(8, 3)");

                    b.Property<decimal>("QuantityLowWarning")
                        .HasColumnType("decimal(8, 3)");

                    b.Property<string>("StockTypeId")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("StockTypeId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Achocolatado",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Achocolatado Líquido L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Açucar 1 Kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Açucar 2 Kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Açucar 5Kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Adoçante",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Arroz 500g",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Arroz 1 Kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Arroz 2Kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Arroz 5Kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Atum",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Azeite de Oliva",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000013"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Biscoito Doce",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000014"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Biscoito Salgado",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000015"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Bolo pronto",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000016"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Bom Bom cx",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000017"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Café 250Kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000018"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Café 500g",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000019"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Chá",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000020"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Chimia - doce de leite",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000021"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Creme de leite",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000022"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Erva mate",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000023"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Ervilha em lata",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000024"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Extrato/molho de Tomate",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000025"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Farinha Aveia 170g",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000026"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Farinha Aveia 500g",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000027"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Farinha Aveia 1kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000028"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Farinha de mandioca 1kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000029"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Farinha de mandioca 500g",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000030"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Farinha de milho 500g",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000031"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Farinha de milho 1kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000032"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Farinha de Trigo 1kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000033"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Farinha de Trigo 5kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000034"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Farinha Integral 1Kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000035"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Farofa",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000036"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Feijão 250g",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000037"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Feijão 500g",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000038"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Feijão 1kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000039"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Fermento biológico",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000040"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Fermento de bolo",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000041"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Gelatina",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000042"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Gelatina 1kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000043"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Granola",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000044"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Iogurte 1l",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000045"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Leite",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000046"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Leite condensado",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000047"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Leite em pó",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000048"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Lentilha",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000049"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Maionese",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000050"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Maisena",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000051"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Margarina",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000052"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Massa",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000053"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Milho de pipoca",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000054"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Milho em lata",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000055"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Miojo",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000056"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Óleo de soja",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000057"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "ovos",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000058"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Polentina",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000059"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Polvilho",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000060"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Refri lata",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000061"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Requeijão",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000062"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sal",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000063"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sal Grosso",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000064"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Salsicha lata",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000065"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sardinha",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000066"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Seleta lata",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000067"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Suco pó pc",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000068"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sucoliq 1L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000069"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Temperos diversos",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000070"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Vinagre",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000071"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Vinagre Balsâmico",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000072"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Absorvente Geriátrico",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000073"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Álcool 500ml",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000074"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Alcool 1L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000075"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Álcool em gel",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000076"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Amaciante 5L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000077"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Amaciante 2L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000078"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Bom bril",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000079"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Cloro (Q-Boa) 1L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000080"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Cloro (Q-Boa) 2L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000081"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Cloro (Q-Boa) 5L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000082"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Coala",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000083"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Cotonete caixa",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000084"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Creme dental",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000085"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Condicionador de Cabelo",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000086"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Desinfetante 500ml",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000087"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Desinfetante 1L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000088"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Desinfetante 2L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000089"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Desinfetante 5L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000090"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Detergente 500ml",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000091"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Detergente 1L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000092"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Detergente 2L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000093"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Detergente 5L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000094"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Detergente Clorado",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000095"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Desodorante Rolom",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000096"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Desodorante Aerosol",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000097"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Desengordurante 500ml",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000098"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Desengordurante 5L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000099"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Diabo Verde",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000100"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Enxaguante bucal",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000101"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Escova de dente",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000102"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Escova de Roupa/chão",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000103"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Esfregão de aço",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000104"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Esponja",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000105"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Fraldas diversas",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000106"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Hidratante",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000107"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Lenço umidecido",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000108"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Limpa Piso",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000109"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Limpa vidro",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000110"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Lixa de unha",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000111"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Lustra móvel",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000112"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Luva de Borracha",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000113"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Luva de Procedimento P",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000114"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Luva de Procedimento M",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000115"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Luva de Procedimento G",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000116"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Multiuso",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000117"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Naftalina 500g",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000118"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Óleo de girassol",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000119"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Pá para lixo",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000120"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Pano de chão",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000121"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Papel higiênico",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000122"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Papel Toalha",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000123"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Prendedor pct 12 ",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000124"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Prestobarba",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000125"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Rodo",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000126"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabão em barra",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000127"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabão em pó 500g",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000128"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabão em pó 1kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000129"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabão em pó 2 Kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000130"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabão em pó 4kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000131"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabão em pó 10kg",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000132"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabão líquido 2L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000133"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabão Líquido Caseiro",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000134"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabonete barra",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000135"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabonete líq 250 ml",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000136"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabonete líq 500 ml",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000137"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabonete líq 1L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000138"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Sabonete líquido 2L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000139"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Saco de lixo 100l",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000140"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Saco lixo branco 50L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000141"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Saco lixo branco 100L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000142"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Saponaceo",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000143"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Shampoo diversos ",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000144"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Talco",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000145"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Vassoura",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000146"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Vanish 1L",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Higiene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000147"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "",
                            Disable = false,
                            Name = "Vinagre 750ml",
                            Quantity = 0m,
                            QuantityLowWarning = 0m,
                            StockTypeId = "Alimento"
                        });
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.StockType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("StockTypes");

                    b.HasData(
                        new
                        {
                            Id = "Alimento",
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "Higiene",
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "Limpeza",
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "Medicamento",
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Disable")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.TaskNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Done")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TaskNotes");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AppleUserId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Disable")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FireBaseCloudMessageToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastPasswordChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<byte[]>("Password")
                        .HasColumnType("bytea");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<Guid>("UserValidationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserValidationId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef2c54d6-a131-4e5a-b757-e3ebdd67e9bd"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Disable = false,
                            Email = "matheuschielle+master@gmail.com",
                            FireBaseCloudMessageToken = "ds4Pz40YTeazL39DToMz5P:APA91bHUoBotVr6Mi9d3EfsbgVGrHUdWfmfGslBP2hFboNcdc7MlTQRt2aE2DZTNad-0-ISU3Bk_wON4eLNJZw_pIQ5tH3lPQDJy-4XglcSH5LAufDKmqjy3K0osz7uph6oTknwHpGem",
                            Name = "Matheus",
                            Password = new byte[] { 65, 76, 109, 69, 56, 75, 74, 97, 107, 55, 89, 89, 80, 66, 49, 70, 87, 56, 106, 115, 72, 119, 99, 120, 103, 49, 103, 87, 106, 89, 98, 80, 86, 70, 111, 121, 50, 105, 82, 104, 43, 113, 111, 112, 90, 103, 112, 69, 48, 77, 90, 117, 70, 117, 87, 122, 107, 110, 56, 77, 100, 117, 53, 111, 109, 85, 112, 50, 87, 88, 116, 65, 116, 77, 54, 69, 87, 87, 120, 52, 99, 109, 82, 117, 99, 74, 102, 47, 111, 84, 82, 81, 75, 48, 106, 55, 104, 117, 72, 47, 65, 120, 107, 81, 120, 68, 84, 43, 101, 70, 43, 100, 105, 120, 47, 57, 56, 52, 76, 52, 85, 106, 68, 47, 97, 66, 119, 51, 100, 98, 117, 81, 107, 51, 101, 122, 74, 43, 105, 100, 69, 85, 87, 110, 105, 49, 43, 87, 49, 66, 84, 106, 86, 109, 67, 55, 68, 88, 65, 49, 115, 68, 120, 101, 53, 103, 54, 88, 90, 52, 49, 43, 110, 105, 73, 107, 52, 73, 107, 118, 50, 67, 76, 74, 65, 43, 86, 76, 69, 69, 122, 84, 112, 83, 113, 110, 111, 74, 83, 70, 105, 82, 79, 120, 118, 71, 118, 103, 72, 49, 51, 99, 115, 90, 101, 121, 52, 84, 78, 73, 50, 89, 84, 117, 71, 116, 117, 77, 105, 47, 71, 107, 75, 87, 97, 115, 43, 72, 66, 74, 102, 70, 82, 84, 82, 72, 77, 90, 73, 110, 112, 88, 98, 101, 82, 71, 68, 117, 74, 49, 107, 121, 113, 105, 67, 103, 118, 57, 101, 72, 106, 105, 120, 67, 113, 112, 117, 73, 69, 99, 54, 84, 76, 79, 54, 83, 57, 117, 49, 112, 55, 97, 67, 102, 67, 87, 100, 84, 85, 108, 69, 66, 53, 101, 53, 100, 85, 67, 69, 76, 47, 106, 99, 109, 122, 118, 105, 88, 113, 66, 65, 52, 52, 122, 118, 70, 120, 69, 108, 105, 101, 50, 67, 104, 103, 66, 76, 122, 108, 48, 100, 65, 61, 61 },
                            UserValidationId = new Guid("f9961144-2f1e-41c4-b96c-79e62c20b21b")
                        },
                        new
                        {
                            Id = new Guid("ef2c54d6-a131-4e5a-b757-e3ebdd67e9be"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Disable = false,
                            Email = "matheuschielle+manager@gmail.com",
                            FireBaseCloudMessageToken = "ds4Pz40YTeazL39DToMz5P:APA91bHUoBotVr6Mi9d3EfsbgVGrHUdWfmfGslBP2hFboNcdc7MlTQRt2aE2DZTNad-0-ISU3Bk_wON4eLNJZw_pIQ5tH3lPQDJy-4XglcSH5LAufDKmqjy3K0osz7uph6oTknwHpGem",
                            Name = "Matheus",
                            Password = new byte[] { 65, 76, 109, 69, 56, 75, 74, 97, 107, 55, 89, 89, 80, 66, 49, 70, 87, 56, 106, 115, 72, 119, 99, 120, 103, 49, 103, 87, 106, 89, 98, 80, 86, 70, 111, 121, 50, 105, 82, 104, 43, 113, 111, 112, 90, 103, 112, 69, 48, 77, 90, 117, 70, 117, 87, 122, 107, 110, 56, 77, 100, 117, 53, 111, 109, 85, 112, 50, 87, 88, 116, 65, 116, 77, 54, 69, 87, 87, 120, 52, 99, 109, 82, 117, 99, 74, 102, 47, 111, 84, 82, 81, 75, 48, 106, 55, 104, 117, 72, 47, 65, 120, 107, 81, 120, 68, 84, 43, 101, 70, 43, 100, 105, 120, 47, 57, 56, 52, 76, 52, 85, 106, 68, 47, 97, 66, 119, 51, 100, 98, 117, 81, 107, 51, 101, 122, 74, 43, 105, 100, 69, 85, 87, 110, 105, 49, 43, 87, 49, 66, 84, 106, 86, 109, 67, 55, 68, 88, 65, 49, 115, 68, 120, 101, 53, 103, 54, 88, 90, 52, 49, 43, 110, 105, 73, 107, 52, 73, 107, 118, 50, 67, 76, 74, 65, 43, 86, 76, 69, 69, 122, 84, 112, 83, 113, 110, 111, 74, 83, 70, 105, 82, 79, 120, 118, 71, 118, 103, 72, 49, 51, 99, 115, 90, 101, 121, 52, 84, 78, 73, 50, 89, 84, 117, 71, 116, 117, 77, 105, 47, 71, 107, 75, 87, 97, 115, 43, 72, 66, 74, 102, 70, 82, 84, 82, 72, 77, 90, 73, 110, 112, 88, 98, 101, 82, 71, 68, 117, 74, 49, 107, 121, 113, 105, 67, 103, 118, 57, 101, 72, 106, 105, 120, 67, 113, 112, 117, 73, 69, 99, 54, 84, 76, 79, 54, 83, 57, 117, 49, 112, 55, 97, 67, 102, 67, 87, 100, 84, 85, 108, 69, 66, 53, 101, 53, 100, 85, 67, 69, 76, 47, 106, 99, 109, 122, 118, 105, 88, 113, 66, 65, 52, 52, 122, 118, 70, 120, 69, 108, 105, 101, 50, 67, 104, 103, 66, 76, 122, 108, 48, 100, 65, 61, 61 },
                            UserValidationId = new Guid("6d3dd407-d5e5-41ce-a49b-599145fe89fc")
                        },
                        new
                        {
                            Id = new Guid("ef2c54d6-a131-4e5a-b757-e3ebdd67e9bc"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Disable = false,
                            Email = "matheuschielle+employee@gmail.com",
                            FireBaseCloudMessageToken = "ds4Pz40YTeazL39DToMz5P:APA91bHUoBotVr6Mi9d3EfsbgVGrHUdWfmfGslBP2hFboNcdc7MlTQRt2aE2DZTNad-0-ISU3Bk_wON4eLNJZw_pIQ5tH3lPQDJy-4XglcSH5LAufDKmqjy3K0osz7uph6oTknwHpGem",
                            Name = "Matheus",
                            Password = new byte[] { 65, 76, 109, 69, 56, 75, 74, 97, 107, 55, 89, 89, 80, 66, 49, 70, 87, 56, 106, 115, 72, 119, 99, 120, 103, 49, 103, 87, 106, 89, 98, 80, 86, 70, 111, 121, 50, 105, 82, 104, 43, 113, 111, 112, 90, 103, 112, 69, 48, 77, 90, 117, 70, 117, 87, 122, 107, 110, 56, 77, 100, 117, 53, 111, 109, 85, 112, 50, 87, 88, 116, 65, 116, 77, 54, 69, 87, 87, 120, 52, 99, 109, 82, 117, 99, 74, 102, 47, 111, 84, 82, 81, 75, 48, 106, 55, 104, 117, 72, 47, 65, 120, 107, 81, 120, 68, 84, 43, 101, 70, 43, 100, 105, 120, 47, 57, 56, 52, 76, 52, 85, 106, 68, 47, 97, 66, 119, 51, 100, 98, 117, 81, 107, 51, 101, 122, 74, 43, 105, 100, 69, 85, 87, 110, 105, 49, 43, 87, 49, 66, 84, 106, 86, 109, 67, 55, 68, 88, 65, 49, 115, 68, 120, 101, 53, 103, 54, 88, 90, 52, 49, 43, 110, 105, 73, 107, 52, 73, 107, 118, 50, 67, 76, 74, 65, 43, 86, 76, 69, 69, 122, 84, 112, 83, 113, 110, 111, 74, 83, 70, 105, 82, 79, 120, 118, 71, 118, 103, 72, 49, 51, 99, 115, 90, 101, 121, 52, 84, 78, 73, 50, 89, 84, 117, 71, 116, 117, 77, 105, 47, 71, 107, 75, 87, 97, 115, 43, 72, 66, 74, 102, 70, 82, 84, 82, 72, 77, 90, 73, 110, 112, 88, 98, 101, 82, 71, 68, 117, 74, 49, 107, 121, 113, 105, 67, 103, 118, 57, 101, 72, 106, 105, 120, 67, 113, 112, 117, 73, 69, 99, 54, 84, 76, 79, 54, 83, 57, 117, 49, 112, 55, 97, 67, 102, 67, 87, 100, 84, 85, 108, 69, 66, 53, 101, 53, 100, 85, 67, 69, 76, 47, 106, 99, 109, 122, 118, 105, 88, 113, 66, 65, 52, 52, 122, 118, 70, 120, 69, 108, 105, 101, 50, 67, 104, 103, 66, 76, 122, 108, 48, 100, 65, 61, 61 },
                            UserValidationId = new Guid("6d3dd407-d5e5-41ce-a49b-599145fe89fa")
                        });
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("ef2c54d6-a131-4e5a-b757-e3ebdd67e9bd"),
                            RoleId = new Guid("e589a9e9-1ba9-46e8-8487-ec68b2f9ef76")
                        },
                        new
                        {
                            UserId = new Guid("ef2c54d6-a131-4e5a-b757-e3ebdd67e9be"),
                            RoleId = new Guid("574ac0d0-2e84-44d7-8949-a8169fa3bbff")
                        },
                        new
                        {
                            UserId = new Guid("ef2c54d6-a131-4e5a-b757-e3ebdd67e9bc"),
                            RoleId = new Guid("a869d27c-b75d-424b-a2d6-c91e273d631b")
                        });
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.UserValidation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmailConfirmationCode")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<bool>("EmailValidated")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhoneNumberConfirmationCode")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<bool>("PhoneNumberValidated")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("UserValidations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9961144-2f1e-41c4-b96c-79e62c20b21b"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmailValidated = true,
                            PhoneNumberValidated = true
                        },
                        new
                        {
                            Id = new Guid("6d3dd407-d5e5-41ce-a49b-599145fe89fc"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmailValidated = true,
                            PhoneNumberValidated = true
                        },
                        new
                        {
                            Id = new Guid("6d3dd407-d5e5-41ce-a49b-599145fe89fa"),
                            CreationDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmailValidated = true,
                            PhoneNumberValidated = true
                        });
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.Employee", b =>
                {
                    b.HasOne("AslaveCare.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.Manager", b =>
                {
                    b.HasOne("AslaveCare.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.RegisterIn", b =>
                {
                    b.HasOne("AslaveCare.Domain.Entities.Supplier", "Supplier")
                        .WithMany("RegistersIn")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.RegisterInStock", b =>
                {
                    b.HasOne("AslaveCare.Domain.Entities.RegisterIn", "RegisterIn")
                        .WithMany("RegisterInStocks")
                        .HasForeignKey("RegisterInId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AslaveCare.Domain.Entities.Stock", "Stock")
                        .WithMany("RegisterInStocks")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RegisterIn");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.RegisterOutStock", b =>
                {
                    b.HasOne("AslaveCare.Domain.Entities.RegisterOut", "RegisterOut")
                        .WithMany("RegisterOutStocks")
                        .HasForeignKey("RegisterOutId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AslaveCare.Domain.Entities.Stock", "Stock")
                        .WithMany("RegisterOutStocks")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RegisterOut");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.Stock", b =>
                {
                    b.HasOne("AslaveCare.Domain.Entities.StockType", null)
                        .WithMany("Stocks")
                        .HasForeignKey("StockTypeId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.TaskNote", b =>
                {
                    b.HasOne("AslaveCare.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.User", b =>
                {
                    b.HasOne("AslaveCare.Domain.Entities.UserValidation", "UserValidation")
                        .WithMany()
                        .HasForeignKey("UserValidationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("UserValidation");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("AslaveCare.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AslaveCare.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.RegisterIn", b =>
                {
                    b.Navigation("RegisterInStocks");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.RegisterOut", b =>
                {
                    b.Navigation("RegisterOutStocks");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.Stock", b =>
                {
                    b.Navigation("RegisterInStocks");

                    b.Navigation("RegisterOutStocks");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.StockType", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("RegistersIn");
                });

            modelBuilder.Entity("AslaveCare.Domain.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
